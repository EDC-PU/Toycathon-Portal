rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAuth() {
      return request.auth != null;
    }

    // Helper function to check for admin role from the user's document in Firestore
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Helper function to get the requesting user's data
    function getMyUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    // By default, deny all reads and writes
    match /{document=**} {
      allow read, write: if false;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // A user can read another user's document if they are in the same team
      function inSameTeam() {
        let myData = getMyUserData();
        let theirData = get(/databases/$(database)/documents/users/$(userId)).data;
        // Check if both users have a teamId and if they are the same
        return myData.teamId != null && myData.teamId == theirData.teamId;
      }
      
      // Admins can read any user doc.
      // A user can read their own doc.
      // A user can read the doc of a teammate.
      allow read: if isAdmin() || request.auth.uid == userId || inSameTeam();

      // Admins can write to any user doc.
      // A user can create/update their own doc.
      allow write: if isAdmin() || request.auth.uid == userId;
    }

    // Rules for the 'teams' collection
    match /teams/{teamId} {
        // A user can read a team if they are the creator OR if their user doc's teamId matches
        allow read: if isAdmin() || request.auth.uid == resource.data.creatorUid || getMyUserData().teamId == teamId;
        // A user can update a team if they are the creator OR if their user doc's teamId matches
        allow update: if isAdmin() || request.auth.uid == resource.data.creatorUid || getMyUserData().teamId == teamId;
        // Only authenticated users can create teams
        allow create: if isAuth();
        // Admins or team creators can delete a team
        allow delete: if isAdmin() || request.auth.uid == resource.data.creatorUid;
    }

    // Rules for 'submissions'
    match /submissions/{teamId} {
      // A user can read/write a submission if they are the creator or member of that team
      allow read, write: if isAdmin() || getMyUserData().teamId == teamId;
    }

    // Rules for public collections
    match /announcements/{docId} {
      allow read: if isAuth();
      allow write: if isAdmin();
    }
    match /categories/{docId} {
      allow read: if isAuth();
      allow write: if isAdmin();
    }
    match /themes/{docId} {
      allow read: if isAuth();
      allow write: if isAdmin();
    }
    match /counters/{docId} {
      allow read, write: if isAuth(); // Allow any authenticated user to read/write for team ID generation
    }
  }
}
