rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    function isTeamCreator(teamId) {
      return get(/databases/$(database)/documents/teams/$(teamId)).data.creatorUid == request.auth.uid;
    }

    function isTeamMember(teamId) {
      let userTeamId = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamId;
      return userTeamId == teamId;
    }
    
    function isUserInTeam(teamId) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamId == teamId;
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    match /users/{userId} {
      allow create: if request.auth.uid == userId;
      
      allow read: if request.auth.uid == userId 
                  || isAdmin()
                  || (resource.data.teamId != null && isUserInTeam(resource.data.teamId));

      allow update: if request.auth.uid == userId && (
                    // Case 1: Updating profile info, but not teamId
                    !('teamId' in request.resource.data.diff(resource.data).affectedKeys()) ||
                    // Case 2: Joining a team for the first time
                    (!('teamId' in resource.data) && 'teamId' in request.resource.data)
                  );
      
      allow delete: if isAdmin();
    }

    match /teams/{teamId} {
      allow create: if request.auth.uid != null;
      
      allow read: if request.auth.uid != null && (isTeamCreator(teamId) || isTeamMember(teamId) || isAdmin());
      
      allow update: if request.auth.uid != null && (isTeamCreator(teamId) || isAdmin());
      
      allow delete: if request.auth.uid != null && (isTeamCreator(teamId) || isAdmin());
    }

    match /submissions/{submissionId} {
      allow read, write: if request.auth.uid != null;
    }
    
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /themes/{themeId} {
        allow read: if true;
        allow write: if isAdmin();
    }
    
    match /announcements/{announcementId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /counters/{counterId} {
      allow read, write: if request.auth.uid != null; // Should be more restrictive in production, e.g. Cloud Function only
    }

    match /{document=**} {
      allow read, write: if false;
    }
  }
}
