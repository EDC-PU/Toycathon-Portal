
rules_version = '2';
 
service cloud.firestore {
  match /databases/{database}/documents {
 
    // Helper functions
    function isAuth() {
      return request.auth != null;
    }
 
    function isAdmin() {
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
 
    function isTeamCreator(teamId) {
      return isAuth() && get(/databases/$(database)/documents/teams/$(teamId)).data.creatorUid == request.auth.uid;
    }
 
    // Collections
    match /users/{userId} {
      allow create; // Anyone can create a user document during sign-up
      allow read: if isAuth() && (request.auth.uid == userId || isAdmin());
      allow update: if isAuth() && request.auth.uid == userId
                    && (
                      // Case 1: Updating general profile info, but NOT teamId
                      (!('teamId' in request.resource.data) && !('teamId' in resource.data))
                      || (('teamId' in request.resource.data && 'teamId' in resource.data) && request.resource.data.teamId == resource.data.teamId)
                      // Case 2: Joining a team for the first time
                      || (!('teamId' in resource.data) && 'teamId' in request.resource.data)
                    )
                    // Case 3: Admin is setting isAdmin flag
                    || (isAdmin() && !('isAdmin' in resource.data) && 'isAdmin' in request.resource.data)
                    // Case 4: Team creator is removing a member (setting teamId to null)
                    || (isTeamCreator(resource.data.teamId) && request.resource.data.teamId == null);
      allow delete: if isAdmin();
      allow list: if isAdmin(); // Admins can list all users
    }
 
    match /teams/{teamId} {
      allow create: if isAuth(); // Any authenticated user can create a team.
      allow read: if isAuth() && (
                      // Team creator can read
                      request.auth.uid == resource.data.creatorUid ||
                      // Team member can read
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.teamId == teamId ||
                      // Admin can read
                      isAdmin()
                    );
      allow update: if isAuth() && (isTeamCreator(teamId) || isAdmin());
      allow delete: if isAuth() && (isTeamCreator(teamId) || isAdmin());
      allow list: if isAuth(); // Allow querying by creatorUid
    }
 
    match /submissions/{submissionId} { // submissionId is the same as teamId
      allow read: if isAuth() && (isTeamCreator(submissionId) || isAdmin());
      allow write: if isAuth() && isTeamCreator(submissionId); // Only team creator can submit/update
    }
 
    match /announcements/{announcementId} {
      allow read: if isAuth();
      allow write: if isAdmin(); // Only admins can create/update/delete announcements
    }
 
    match /categories/{categoryId} {
      allow read; // All can read
      allow write: if isAdmin(); // Only admins
    }
 
    match /themes/{themeId} {
        allow read; // All can read
        allow write: if isAdmin(); // Only admins
    }
 
    match /counters/{counterId} {
      allow read, write: if isAuth(); // For transactions, access is checked on the operation itself
    }
  }
}
