rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    match /users/{userId} {
      allow read: if isSignedIn();
      allow list: if isAdmin() || request.query.where.get('teamId') != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId && 
                       request.resource.data.isAdmin == resource.data.isAdmin &&
                       (request.resource.data.teamId == resource.data.teamId || !('teamId' in resource.data));
      allow delete: if isAdmin();
    }

    match /teams/{teamId} {
      allow create: if isSignedIn();
      allow read: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    match /submissions/{submissionId} {
      function isTeamCreator() {
         return get(/databases/$(database)/documents/teams/$(submissionId)).data.creatorUid == request.auth.uid;
      }
      allow read, write: if isSignedIn() && (isTeamCreator() || isAdmin());
    }
    
    match /announcements/{announcementId} {
        allow read: if true;
        allow create, update, delete: if isSignedIn() && isAdmin();
    }

    match /categories/{categoryId} {
        allow read: if true;
        allow create, update, delete: if isSignedIn() && isAdmin();
    }
    
    match /themes/{themeId} {
        allow read: if true;
        allow create, update, delete: if isSignedIn() && isAdmin();
    }
    
    match /counters/{counterId} {
        allow read, write: if isSignedIn();
    }
  }
}